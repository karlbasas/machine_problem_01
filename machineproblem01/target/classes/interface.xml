<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps"
	xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers" xmlns:ftp="http://www.mulesoft.org/schema/mule/ee/ftp"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:context="http://www.springframework.org/schema/context" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd
http://www.mulesoft.org/schema/mule/ee/ftp http://www.mulesoft.org/schema/mule/ee/ftp/current/mule-ftp-ee.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <http:listener-config name="machineproblem01-httpListenerConfig" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="machineproblem01-config" raml="machineproblem01.raml" consoleEnabled="false" doc:name="Router"/>
    <smtp:connector name="smtpConnector" doc:name="SMTP" validateConnections="false"/>
    <!-- smtp:connector name="SMTP_Config" validateConnections="false" doc:name="SMTP" contentType="application/json" fromAddress="f4muletest@gmail.com" dynamicNotification="true" subject="test"/-->
    <context:property-placeholder location="dev.properties"/>
    <smtp:gmail-connector name="Gmail" validateConnections="true" doc:name="Gmail"/>
    <flow name="machineproblem01-main">
        <http:listener config-ref="machineproblem01-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="machineproblem01-config" doc:name="APIkit Router"/>
        <exception-strategy ref="machineproblem01-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="machineproblem01-console">
        <http:listener config-ref="machineproblem01-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="machineproblem01-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="get:/getUsers:machineproblem01-config">
        <flow-ref name="implementation" doc:name="implementation"/>
    </flow>
    <flow name="get:/getUser/{userId}:machineproblem01-config">
        <flow-ref name="implementation" doc:name="implementation"/>
    </flow>
    <apikit:mapping-exception-strategy name="machineproblem01-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
 	<flow name="schedulemail">
		<poll doc:name="Poll">
			<schedulers:cron-scheduler expression="0 10 0 * * ? *"/>
			<expression-transformer expression="#[groovy:if(muleContext.registry.lookupFlowConstruct('processmail').isStopped()){muleContext.registry.lookupFlowConstruct('processmail').start()}]" doc:name="Start processmail"/>
     	</poll>
        <logger message="#['Polling mailer']" level="INFO" doc:name="Logger"/>

 	</flow>
	<flow name="processmail" initialState="stopped">
        <file:inbound-endpoint path="src/main/resources/input" moveToDirectory="src/main/resources/output"  responseTimeout="10000" doc:name="Read from File"/>
        <file:file-to-string-transformer doc:name="File to String"/>
        <logger message="#['Email': payload]" level="INFO" doc:name="Logger"/>
        <set-attachment attachmentName="payload.csv" value="#[payload]" contentType="text/csv" doc:name="Attachment"/>
        <smtp:outbound-endpoint host="${smtp.host}" port="${smtp.port}" user="${smtp.user}" password="${smtp.pass}" connector-ref="Gmail" to="${email.to}" from="${smtp.user}" subject="[KB] User Details" responseTimeout="60000"  doc:name="SMTP"/>
		<expression-transformer expression="#[groovy:if(muleContext.registry.lookupFlowConstruct('processmail') != null){muleContext.registry.lookupFlowConstruct('processmail').stop()}]" doc:name="Stop processmail" returnSourceIfNull="true"/>
	</flow>
</mule>
